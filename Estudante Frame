package view;

import controller.StudentController;
import model.Student;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.List;

public class StudentFrame extends JFrame {
    private StudentController controller = new StudentController();
    private JTable table;
    private DefaultTableModel tableModel;
    private JTextField nameField, registrationField, ageField, courseField, searchField;

    public StudentFrame() {
        setTitle("Cadastro de Alunos");
        setSize(800, 600);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout(10, 10));

        // Tabela
        tableModel = new DefaultTableModel(new Object[]{"Nome", "Matrícula", "Idade", "Curso"}, 0);
        table = new JTable(tableModel);
        table.setFillsViewportHeight(true);
        add(new JScrollPane(table), BorderLayout.CENTER);

        // Painel de input
        JPanel formPanel = new JPanel(new GridLayout(4, 2, 5, 5));
        nameField = new JTextField();
        registrationField = new JTextField();
        ageField = new JTextField();
        courseField = new JTextField();

        formPanel.add(new JLabel("Nome:"));
        formPanel.add(nameField);
        formPanel.add(new JLabel("Matrícula:"));
        formPanel.add(registrationField);
        formPanel.add(new JLabel("Idade:"));
        formPanel.add(ageField);
        formPanel.add(new JLabel("Curso:"));
        formPanel.add(courseField);

        // Painel de botões
        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 10, 10));
        JButton addBtn = new JButton("Adicionar");
        JButton editBtn = new JButton("Editar");
        JButton removeBtn = new JButton("Remover");
        buttonPanel.add(addBtn);
        buttonPanel.add(editBtn);
        buttonPanel.add(removeBtn);

        // Painel de pesquisa
        JPanel searchPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 5));
        searchField = new JTextField(20);
        JButton searchBtn = new JButton("Pesquisar");
        searchPanel.add(new JLabel("Pesquisar por Nome:"));
        searchPanel.add(searchField);
        searchPanel.add(searchBtn);

        // Painel sul
        JPanel southPanel = new JPanel(new BorderLayout(10, 10));
        southPanel.add(formPanel, BorderLayout.NORTH);
        southPanel.add(buttonPanel, BorderLayout.CENTER);
        southPanel.add(searchPanel, BorderLayout.SOUTH);
        add(southPanel, BorderLayout.SOUTH);

        // Ações dos botões
        addBtn.addActionListener(e -> {
            try {
                String name = nameField.getText().trim();
                String registration = registrationField.getText().trim();
                int age = Integer.parseInt(ageField.getText().trim());
                String course = courseField.getText().trim();

                if (!name.isEmpty() && !registration.isEmpty() && !course.isEmpty()) {
                    Student student = new Student(name, registration, age, course);
                    controller.addStudent(student);
                    refreshTable(controller.getAllStudents());
                    clearFields();
                } else {
                    JOptionPane.showMessageDialog(this, "Preencha todos os campos.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "A idade deve ser um número.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        });

        editBtn.addActionListener(e -> {
            int index = table.getSelectedRow();
            if (index >= 0) {
                try {
                    String name = nameField.getText().trim();
                    String registration = registrationField.getText().trim();
                    int age = Integer.parseInt(ageField.getText().trim());
                    String course = courseField.getText().trim();

                    Student student = new Student(name, registration, age, course);
                    controller.updateStudent(index, student);
                    refreshTable(controller.getAllStudents());
                    clearFields();
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "A idade deve ser um número.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um aluno para editar.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        });

        removeBtn.addActionListener(e -> {
            int index = table.getSelectedRow();
            if (index >= 0) {
                controller.removeStudent(index);
                refreshTable(controller.getAllStudents());
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um aluno para remover.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        });

        searchBtn.addActionListener(e -> {
            String searchTerm = searchField.getText().trim();
            List<Student> results = controller.searchStudentsByName(searchTerm);
            refreshTable(results);
        });

        table.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting() && table.getSelectedRow() != -1) {
                int row = table.getSelectedRow();
                nameField.setText(tableModel.getValueAt(row, 0).toString());
                registrationField.setText(tableModel.getValueAt(row, 1).toString());
                ageField.setText(tableModel.getValueAt(row, 2).toString());
                courseField.setText(tableModel.getValueAt(row, 3).toString());
            }
        });

        refreshTable(controller.getAllStudents());
    }

    private void refreshTable(List<Student> students) {
        tableModel.setRowCount(0);
        for (Student s : students) {
            tableModel.addRow(new Object[]{s.getName(), s.getRegistration(), s.getAge(), s.getCourse()});
        }
    }

    private void clearFields() {
        nameField.setText("");
        registrationField.setText("");
        ageField.setText("");
        courseField.setText("");
    }
}
